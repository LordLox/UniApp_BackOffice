name: Build and Push Docker Image to GHCR

# Controls when the workflow will run
on:
  push:
    branches:
      - main # Triggers on pushes to the main branch
  workflow_dispatch: # Allows manual triggering from the Actions tab

# Environment variables available to all jobs and steps in this workflow
env:
  REGISTRY: ghcr.io
  # IMAGE_NAME will be set to your GitHub repository name, e.g., owner/repo-name
  # It's constructed in the job below.

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    # Permissions needed by the GITHUB_TOKEN for publishing to GHCR
    permissions:
      contents: read # To checkout the repository
      packages: write # To push packages (Docker images) to GHCR

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          # Use this to enable --provenance=true, which is good practice
          # driver-opts: image=moby/buildkit:v0.10.6 # Or a newer version
          # buildkitd-flags: --debug
          install: true

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }} # Your GitHub username or organization name
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ github.event.repository.name }}
          # Generates tags:
          # - type=sha,prefix=,suffix=,format=short (short git SHA)
          # - type=ref,event=branch (branch name, e.g., main)
          # - type=ref,event=tag (git tag)
          # - type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', 'main') }} (latest tag only for main branch pushes)
          tags: |
            type=sha,prefix=,suffix=,format=short
            type=ref,event=branch
            type=ref,event=tag
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', 'main') }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: . # Build context is the root of the repository
          file: ./Dockerfile # Path to your Dockerfile
          push: true # Actually push the image
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          # Optional: Add build arguments if needed by your Dockerfile
          # For the Nginx setup, REACT_APP_BACKEND_API_URL is handled at runtime by docker-entrypoint.sh
          # build-args: |
          #   REACT_APP_BACKEND_API_URL=${{ secrets.YOUR_BACKEND_API_URL_FOR_BUILD_IF_NEEDED }}
          cache-from: type=gha # Enable GitHub Actions cache for Docker layers
          cache-to: type=gha,mode=max # Cache layers to GitHub Actions cache
